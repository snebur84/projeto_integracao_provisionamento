---
name: Deploy GCP - debug

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment (prod, staging)'
        required: true
        default: prod

jobs:
  tf-bootstrap-debug:
    runs-on: ubuntu-latest
    env:
      TF_IN_AUTOMATION: true

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: '1.5.7'

      - name: Capture and sanitize outputs
        working-directory: infra/terraform/bootstrap/gcp
        run: |
          set -euo pipefail

          # capture terraform outputs (stdout) and stderr
          terraform output -json -no-color \
            > /tmp/bootstrap_outputs.raw.json \
            2>/tmp/bootstrap_outputs.err || true

          # sanitize outputs: if JSON valid, redact sensitive values
          if jq -e . /tmp/bootstrap_outputs.raw.json >/dev/null 2>&1; then
            jq 'with_entries(.value |= (if .sensitive==true then
              "[REDACTED]" else .value end))' \
              /tmp/bootstrap_outputs.raw.json \
              > /tmp/bootstrap_outputs.sanitized.json || true
          else
            echo "{}" > /tmp/bootstrap_outputs.sanitized.json
          fi

          # pull canonical state (works with remote backends)
          terraform state pull > /tmp/tfstate.raw.json \
            2>/tmp/tfstate.err || true

          # list bucket resources and their names (non-sensitive)
          jq -r '.resources[]? | select(.type=="google_storage_bucket") |
            .name + " -> " + (.instances[0].attributes.name // "")' \
            /tmp/tfstate.raw.json > /tmp/tfstate.buckets.txt || true

          # list outputs found in state (stringified)
          jq -r '.outputs // {} | keys[]? as $k |
            "\($k): " + ((.[$k].value | tostring))' \
            /tmp/tfstate.raw.json > /tmp/tfstate.outputs.txt || true

          # summary for artifact
          {
            echo "git-branch: $(git rev-parse --abbrev-ref HEAD 2>/dev/null \
              || echo unknown)"
            echo "git-commit: $(git rev-parse HEAD 2>/dev/null || echo unknown)"
            echo "bootstrap-dir: $(pwd)"
            echo "artifact-time: $(date -u +\"%Y-%m-%dT%H:%M:%SZ\")"
            echo ""
            echo "Files produced:"
            ls -la /tmp/bootstrap_outputs.* /tmp/tfstate.* \
              /tmp/tfstate.*.txt || true
          } > /tmp/tf-debug-summary.txt

      - name: Upload debug artifacts
        uses: actions/upload-artifact@v4
        with:
          name: tf-bootstrap-debug
          path: |
            /tmp/bootstrap_outputs.sanitized.json
            /tmp/bootstrap_outputs.err
            /tmp/tfstate.raw.json
            /tmp/tfstate.err
            /tmp/tfstate.buckets.txt
            /tmp/tfstate.outputs.txt
            /tmp/tf-debug-summary.txt
