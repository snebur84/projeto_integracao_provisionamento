name: Infra - Terraform

on:
  pull_request:
    paths:
      - 'infra/terraform/**'
  workflow_dispatch:
  push:
    branches:
      - main

env:
  TF_VERSION: 1.5.0

jobs:
  validate-and-plan:
    name: Validate & Plan (PR safe)
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' || github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform fmt
        working-directory: infra/terraform
        run: terraform fmt -check

      - name: Terraform Init (PR-safe)
        working-directory: infra/terraform
        run: terraform init -input=false -backend=false

      - name: Terraform Validate
        working-directory: infra/terraform
        run: terraform validate

      - name: Terraform Plan
        working-directory: infra/terraform
        env:
          TF_VAR_db_password: ${{ secrets.TF_VAR_db_password }}
        run: |
          terraform plan -out=tfplan -input=false -var="environment=pr-${{ github.run_id }}" || true

      - name: Upload plan artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan-${{ github.run_id }}
          path: infra/terraform/tfplan
  apply:
    name: Apply (manual, protected)
    runs-on: ubuntu-latest
    needs: validate-and-plan
    if: github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/main'
    environment:
      name: production
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Configure AWS credentials (via OIDC assume role)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Terraform Init (with backend)
        working-directory: infra/terraform
        run: terraform init -input=false -backend-config="bucket=${{ secrets.TF_STATE_S3_BUCKET }}" -backend-config="dynamodb_table=${{ secrets.TF_LOCK_TABLE }}" -backend-config="region=${{ secrets.AWS_REGION }}"

      - name: Terraform Apply
        working-directory: infra/terraform
        env:
          TF_VAR_db_password: ${{ secrets.TF_VAR_db_password }}
        run: |
          terraform plan -out=tfplan -input=false
          terraform apply -input=false -auto-approve tfplan