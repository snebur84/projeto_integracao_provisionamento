# Generated by Django 5.2.7 on 2025-10-19 14:03

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DeviceProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='profile name')),
                ('sip_server', models.CharField(blank=True, max_length=50, verbose_name='SIP server')),
                ('port_server', models.IntegerField(default=5060, help_text='Porta com 4 dígitos (entre 1000 e 9999).', validators=[django.core.validators.MinValueValidator(1000), django.core.validators.MaxValueValidator(9999)], verbose_name='port server')),
                ('protocol_type', models.CharField(choices=[('UDP', 'UDP'), ('TCP', 'TCP'), ('TLS', 'TLS')], default='UDP', max_length=3, verbose_name='protocol type')),
                ('backup_server', models.CharField(blank=True, max_length=50, verbose_name='backup server')),
                ('domain_server', models.CharField(blank=True, max_length=50, verbose_name='domain server')),
                ('time_zone', models.CharField(blank=True, max_length=50, verbose_name='time zone')),
                ('srtp_enable', models.BooleanField(default=False, verbose_name='SRTP enabled')),
                ('template_ref', models.CharField(blank=True, help_text='Identificador do template no MongoDB', max_length=255, verbose_name='template ref')),
                ('metadata', models.JSONField(blank=True, default=dict, null=True, verbose_name='metadata')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
            ],
            options={
                'verbose_name': 'Device Profile',
                'verbose_name_plural': 'Device Profiles',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='DeviceConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.CharField(help_text='Identificador lógico do device', max_length=255, unique=True, verbose_name='identifier')),
                ('mac_address', models.CharField(db_index=True, max_length=32, unique=True, verbose_name='mac address')),
                ('user_register', models.CharField(blank=True, max_length=21, verbose_name='user register')),
                ('passwd_register', models.CharField(blank=True, max_length=50, verbose_name='passwd register')),
                ('display_name', models.CharField(blank=True, max_length=50, verbose_name='display name')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='ip address')),
                ('public_ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='public ip')),
                ('private_ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='private ip')),
                ('attempts_provisioning', models.PositiveIntegerField(default=0, verbose_name='attempts provisioning')),
                ('provisioned_at', models.DateTimeField(blank=True, null=True, verbose_name='provisioned at')),
                ('exported_to_rps', models.BooleanField(default=False, verbose_name='exported to RPS')),
                ('metadata', models.JSONField(blank=True, default=dict, null=True, verbose_name='metadata')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('profile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='devices', to='core.deviceprofile')),
            ],
            options={
                'verbose_name': 'Device Config',
                'verbose_name_plural': 'Device Configs',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Provisioning',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mac_address', models.CharField(blank=True, db_index=True, max_length=32, verbose_name='mac address')),
                ('identifier', models.CharField(blank=True, db_index=True, max_length=255, verbose_name='identifier')),
                ('vendor', models.CharField(blank=True, max_length=50, verbose_name='vendor')),
                ('model', models.CharField(blank=True, max_length=50, verbose_name='model')),
                ('version', models.CharField(blank=True, max_length=50, verbose_name='version')),
                ('public_ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='public ip')),
                ('private_ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='private ip')),
                ('filename', models.CharField(blank=True, max_length=255, verbose_name='filename')),
                ('template_ref', models.CharField(blank=True, max_length=255, verbose_name='template ref')),
                ('status', models.CharField(choices=[('ok', 'OK'), ('forbidden', 'Forbidden'), ('error', 'Error')], default='ok', max_length=20, verbose_name='status')),
                ('user_agent', models.TextField(blank=True, verbose_name='user agent')),
                ('notes', models.TextField(blank=True, verbose_name='notes')),
                ('metadata', models.JSONField(blank=True, default=dict, null=True, verbose_name='metadata')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('device', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='provisionings', to='core.deviceconfig')),
            ],
            options={
                'verbose_name': 'Provisioning',
                'verbose_name_plural': 'Provisionings',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='deviceconfig',
            index=models.Index(fields=['mac_address'], name='core_device_mac_add_6ff168_idx'),
        ),
        migrations.AddIndex(
            model_name='deviceconfig',
            index=models.Index(fields=['identifier'], name='core_device_identif_4f81d9_idx'),
        ),
        migrations.AddIndex(
            model_name='provisioning',
            index=models.Index(fields=['created_at'], name='core_provis_created_41fcc2_idx'),
        ),
        migrations.AddIndex(
            model_name='provisioning',
            index=models.Index(fields=['status'], name='core_provis_status_30cd25_idx'),
        ),
        migrations.AddIndex(
            model_name='provisioning',
            index=models.Index(fields=['mac_address'], name='core_provis_mac_add_7d27f9_idx'),
        ),
    ]
