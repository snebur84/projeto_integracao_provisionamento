# Generated by Django 5.2.7 on 2025-10-19 18:30

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='deviceconfig',
            options={'ordering': ('identifier',), 'verbose_name': 'Device config', 'verbose_name_plural': 'Device configs'},
        ),
        migrations.AlterModelOptions(
            name='deviceprofile',
            options={'ordering': ('name',), 'verbose_name': 'Device profile', 'verbose_name_plural': 'Device profiles'},
        ),
        migrations.RemoveIndex(
            model_name='deviceconfig',
            name='core_device_mac_add_6ff168_idx',
        ),
        migrations.RemoveIndex(
            model_name='deviceconfig',
            name='core_device_identif_4f81d9_idx',
        ),
        migrations.AddField(
            model_name='deviceprofile',
            name='backup_port',
            field=models.IntegerField(default=5060, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(65535)], verbose_name='Backup SIP port'),
        ),
        migrations.AddField(
            model_name='deviceprofile',
            name='ntp_server',
            field=models.CharField(blank=True, max_length=255, verbose_name='NTP server'),
        ),
        migrations.AddField(
            model_name='deviceprofile',
            name='provision_file',
            field=models.CharField(blank=True, max_length=255, verbose_name='Provision file'),
        ),
        migrations.AddField(
            model_name='deviceprofile',
            name='provision_server',
            field=models.CharField(blank=True, max_length=255, verbose_name='Provision server'),
        ),
        migrations.AddField(
            model_name='deviceprofile',
            name='proxy',
            field=models.CharField(blank=True, max_length=255, verbose_name='Proxy address'),
        ),
        migrations.AddField(
            model_name='deviceprofile',
            name='register_ttl',
            field=models.IntegerField(default=3600, help_text='Default registation TTL in seconds', verbose_name='Register TTL'),
        ),
        migrations.AddField(
            model_name='deviceprofile',
            name='vlan_active',
            field=models.BooleanField(default=False, verbose_name='VLAN active'),
        ),
        migrations.AddField(
            model_name='deviceprofile',
            name='vlan_id',
            field=models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(4094)], verbose_name='VLAN ID'),
        ),
        migrations.AddField(
            model_name='deviceprofile',
            name='voice_codecs',
            field=models.CharField(blank=True, help_text='Comma separated codecs, e.g. PCMU,PCMA,G729', max_length=255, verbose_name='Voice codecs'),
        ),
        migrations.AlterField(
            model_name='deviceconfig',
            name='attempts_provisioning',
            field=models.IntegerField(default=0, verbose_name='attempts provisioning'),
        ),
        migrations.AlterField(
            model_name='deviceconfig',
            name='display_name',
            field=models.CharField(blank=True, help_text='Display name (%%displayname%%)', max_length=100, verbose_name='display name'),
        ),
        migrations.AlterField(
            model_name='deviceconfig',
            name='identifier',
            field=models.CharField(help_text='Logical identifier / account (used as %%account%%)', max_length=255, unique=True, verbose_name='identifier'),
        ),
        migrations.AlterField(
            model_name='deviceconfig',
            name='mac_address',
            field=models.CharField(db_index=True, help_text='Normalized MAC (only hex)', max_length=32, unique=True, verbose_name='mac address'),
        ),
        migrations.AlterField(
            model_name='deviceconfig',
            name='metadata',
            field=models.JSONField(blank=True, default=dict, verbose_name='metadata'),
        ),
        migrations.AlterField(
            model_name='deviceconfig',
            name='passwd_register',
            field=models.CharField(blank=True, help_text='Password (%%passwd%%)', max_length=128, verbose_name='passwd register'),
        ),
        migrations.AlterField(
            model_name='deviceconfig',
            name='user_register',
            field=models.CharField(blank=True, help_text='User (%%user%%)', max_length=128, verbose_name='user register'),
        ),
        migrations.AlterField(
            model_name='deviceprofile',
            name='backup_server',
            field=models.CharField(blank=True, max_length=255, verbose_name='Backup SIP server'),
        ),
        migrations.AlterField(
            model_name='deviceprofile',
            name='domain_server',
            field=models.CharField(blank=True, max_length=255, verbose_name='Domain / Local domain'),
        ),
        migrations.AlterField(
            model_name='deviceprofile',
            name='metadata',
            field=models.JSONField(blank=True, default=dict, verbose_name='metadata'),
        ),
        migrations.AlterField(
            model_name='deviceprofile',
            name='port_server',
            field=models.IntegerField(default=5060, help_text='Porta do servidor SIP', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(65535)], verbose_name='port server'),
        ),
        migrations.AlterField(
            model_name='deviceprofile',
            name='protocol_type',
            field=models.CharField(choices=[('UDP', 'UDP'), ('TCP', 'TCP'), ('TLS', 'TLS')], default='UDP', max_length=4, verbose_name='protocol type'),
        ),
        migrations.AlterField(
            model_name='deviceprofile',
            name='sip_server',
            field=models.CharField(blank=True, max_length=255, verbose_name='SIP server'),
        ),
        migrations.AlterField(
            model_name='deviceprofile',
            name='template_ref',
            field=models.CharField(blank=True, help_text='Mongo template _id or identifier', max_length=255, verbose_name='Mongo template reference'),
        ),
    ]
