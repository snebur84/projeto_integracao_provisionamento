version: '3.8'

services:
  db:
    image: mysql:8.0
    container_name: provision_db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE:-provision_db}
      MYSQL_USER: ${MYSQL_USER:-provision_user}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-provision_pass}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root_pass}
    volumes:
      - db_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  mongo:
    image: mongo:6.0
    container_name: provision_mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_USER:-}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASSWORD:-}
    volumes:
      - mongo_data:/data/db
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: provision_web
    restart: unless-stopped
    env_file:
      - .env
    environment:
      DJANGO_SETTINGS_MODULE: provision.settings_docker
      MYSQL_HOST: db
      MYSQL_PORT: 3306
      MONGODB_HOST: mongo
      MONGODB_PORT: 27017
    depends_on:
      - db
      - mongo
    volumes:
      - ./:/app:cached
      - static_volume:/app/staticfiles
    expose:
      - "8000"

  nginx:
    image: nginx:stable-alpine
    container_name: provision_nginx
    restart: unless-stopped
    ports:
      - "${NGINX_HTTP_PORT:-80}:80"
    volumes:
      - ./nginx/provision.conf:/etc/nginx/conf.d/default.conf:ro
      - static_volume:/usr/share/nginx/html/static:ro
    depends_on:
      - web

volumes:
  db_data:
  mongo_data:
  static_volume: